import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Eye, Download, Calendar, User, FileImage, X } from 'lucide-react';
import jsPDF from 'jspdf';

const Viewer = () => {
  const [scans, setScans] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedScan, setSelectedScan] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    fetchScans();
  }, []);

  const fetchScans = async () => {
    try {
      const response = await axios.get('http://localhost:5000/api/scans');
      setScans(response.data);
    } catch (error) {
      setError('Failed to fetch scans');
      console.error('Error fetching scans:', error);
    } finally {
      setLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const generatePDF = async (scan) => {
    try {
      const pdf = new jsPDF();
      
      // Add header
      pdf.setFontSize(20);
      pdf.setTextColor(37, 99, 235); // medical-primary color
      pdf.text('OralVis Healthcare', 20, 30);
      
      pdf.setFontSize(16);
      pdf.setTextColor(0, 0, 0);
      pdf.text('Dental Scan Report', 20, 45);
      
      // Add patient information
      pdf.setFontSize(12);
      pdf.text(`Patient Name: ${scan.patient_name}`, 20, 65);
      pdf.text(`Patient ID: ${scan.patient_id}`, 20, 80);
      pdf.text(`Scan Type: ${scan.scan_type}`, 20, 95);
      pdf.text(`Region: ${scan.region}`, 20, 110);
      pdf.text(`Upload Date: ${formatDate(scan.upload_date)}`, 20, 125);
      pdf.text(`Uploaded by: ${scan.technician_name}`, 20, 140);
      
      // Add image if available
      if (scan.image_url) {
        try {
          const response = await fetch(scan.image_url);
          const blob = await response.blob();
          const reader = new FileReader();
          
          reader.onload = function() {
            const imgData = reader.result;
            pdf.addImage(imgData, 'JPEG', 20, 160, 160, 120);
            
            // Add footer
            pdf.setFontSize(10);
            pdf.setTextColor(128, 128, 128);
            pdf.text('Generated by OralVis Healthcare System', 20, 290);
            pdf.text(`Report generated on: ${new Date().toLocaleString()}`, 20, 300);
            
            // Save PDF
            pdf.save(`${scan.patient_name}_${scan.patient_id}_report.pdf`);
          };
          
          reader.readAsDataURL(blob);
        } catch (imageError) {
          console.error('Error loading image for PDF:', imageError);
          // Generate PDF without image
          pdf.text('Image could not be loaded', 20, 160);
          pdf.save(`${scan.patient_name}_${scan.patient_id}_report.pdf`);
        }
      } else {
        pdf.save(`${scan.patient_name}_${scan.patient_id}_report.pdf`);
      }
    } catch (error) {
      console.error('Error generating PDF:', error);
      alert('Failed to generate PDF report');
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-64">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-medical-primary"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="text-center py-12">
        <div className="text-medical-error">{error}</div>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      <div className="text-center">
        <Eye className="h-12 w-12 text-medical-primary mx-auto mb-4" />
        <h1 className="text-3xl font-bold text-medical-dark">Patient Scan Viewer</h1>
        <p className="mt-2 text-gray-600">Review and download patient dental scans</p>
      </div>

      {scans.length === 0 ? (
        <div className="text-center py-12">
          <FileImage className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">No scans available</h3>
          <p className="text-gray-600">Scans uploaded by technicians will appear here.</p>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {scans.map((scan) => (
            <div key={scan.id} className="card hover:shadow-lg transition-all duration-300">
              <div className="aspect-w-16 aspect-h-12 mb-4">
                <img
                  src={scan.image_url}
                  alt={`${scan.patient_name} - ${scan.scan_type}`}
                  className="w-full h-48 object-cover rounded-lg cursor-pointer hover:opacity-90 transition-opacity duration-200"
                  onClick={() => setSelectedScan(scan)}
                />
              </div>
              
              <div className="space-y-3">
                <div>
                  <h3 className="text-lg font-semibold text-medical-dark">{scan.patient_name}</h3>
                  <p className="text-sm text-gray-600">ID: {scan.patient_id}</p>
                </div>
                
                <div className="space-y-1">
                  <p className="text-sm"><span className="font-medium">Type:</span> {scan.scan_type}</p>
                  <p className="text-sm"><span className="font-medium">Region:</span> {scan.region}</p>
                  <p className="text-sm flex items-center">
                    <Calendar className="h-3 w-3 mr-1" />
                    {formatDate(scan.upload_date)}
                  </p>
                  <p className="text-sm flex items-center">
                    <User className="h-3 w-3 mr-1" />
                    {scan.technician_name}
                  </p>
                </div>
                
                <div className="flex space-x-2 pt-2">
                  <button
                    onClick={() => setSelectedScan(scan)}
                    className="flex-1 flex items-center justify-center space-x-1 px-3 py-2 bg-medical-primary hover:bg-medical-secondary text-white rounded-lg transition-colors duration-200"
                  >
                    <Eye className="h-4 w-4" />
                    <span>View</span>
                  </button>
                  <button
                    onClick={() => generatePDF(scan)}
                    className="flex-1 flex items-center justify-center space-x-1 px-3 py-2 bg-medical-success hover:bg-green-600 text-white rounded-lg transition-colors duration-200"
                  >
                    <Download className="h-4 w-4" />
                    <span>PDF</span>
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Modal for viewing full image */}
      {selectedScan && (
        <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-xl max-w-4xl max-h-[90vh] overflow-auto">
            <div className="flex items-center justify-between p-6 border-b border-gray-200">
              <div>
                <h2 className="text-xl font-semibold text-medical-dark">
                  {selectedScan.patient_name} - {selectedScan.scan_type}
                </h2>
                <p className="text-gray-600">Patient ID: {selectedScan.patient_id}</p>
              </div>
              <button
                onClick={() => setSelectedScan(null)}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors duration-200"
              >
                <X className="h-6 w-6" />
              </button>
            </div>
            
            <div className="p-6">
              <img
                src={selectedScan.image_url}
                alt={`${selectedScan.patient_name} - ${selectedScan.scan_type}`}
                className="w-full max-w-2xl mx-auto rounded-lg"
              />
              
              <div className="mt-6 grid grid-cols-2 gap-4 text-sm">
                <div>
                  <span className="font-medium text-gray-700">Region:</span>
                  <span className="ml-2">{selectedScan.region}</span>
                </div>
                <div>
                  <span className="font-medium text-gray-700">Upload Date:</span>
                  <span className="ml-2">{formatDate(selectedScan.upload_date)}</span>
                </div>
                <div>
                  <span className="font-medium text-gray-700">Uploaded by:</span>
                  <span className="ml-2">{selectedScan.technician_name}</span>
                </div>
              </div>
              
              <div className="mt-6 flex justify-center">
                <button
                  onClick={() => generatePDF(selectedScan)}
                  className="flex items-center space-x-2 px-6 py-3 bg-medical-success hover:bg-green-600 text-white rounded-lg transition-colors duration-200"
                >
                  <Download className="h-4 w-4" />
                  <span>Download PDF Report</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Viewer;